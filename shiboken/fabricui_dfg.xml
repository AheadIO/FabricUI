<?xml  version="1.0"?>
<typesystem package="FabricUI">
  <namespace-type name="FabricUI" generate="no">
    <namespace-type name="DFG" generate="yes">
      <object-type name="DFGConfig" />-
      <object-type name="DFGController" />-
      <object-type name="DFGHotkeys" />
      <object-type name="DFGLogWidget" />
      <object-type name="DFGMainWindow" />
      <object-type name="DFGUICmdHandler" />
      <object-type name="DFGUICmdHandler_QUndo" />
      <object-type name="DFGValueEditor" />
      <object-type name="DFGWidget">
        <modify-function signature="DFGWidget(FabricCore::DFGHost&amp;)">
          <modify-argument index="1">
            <replace-type modified-type="PyObject"/>
          </modify-argument>
          <inject-code class="target" position="beginning">
            void *argp1 = 0;
            int res1 = SWIG_ConvertPtr(%PYARG_1, &amp;argp1, SWIGTYPE_p_FabricCore__DFGHost, 0 | 0);
            if (!SWIG_IsOK(res1) || !argp1) {
              PyErr_SetString(PyExc_TypeError, "FabricCore::DFGHost argument is of wrong type");
            }
            else {
              FabricCore::DFGHost *host_ptr = reinterpret_cast&lt; FabricCore::DFGHost * &gt;(argp1);
              %0 = new %TYPE(*host_ptr);
            }
            </inject-code>

        </modify-function>
        <modify-function signature="DFGWidget(QWidget*,FabricCore::Client&amp;,FabricCore::DFGHost&amp;,FabricCore::DFGBinding&amp;,FTL::StrRef,FabricCore::DFGExec&amp;,FabricServices::ASTWrapper::KLASTManager*,FabricUI::DFG::DFGUICmdHandler*,const FabricUI::DFG::DFGConfig&amp;,bool)">
          <modify-argument index="2">
            <replace-type modified-type="PyObject"/>
          </modify-argument>
          <modify-argument index="3">
            <replace-type modified-type="PyObject"/>
          </modify-argument>
          <modify-argument index="4">
            <replace-type modified-type="PyObject"/>
          </modify-argument>
          <modify-argument index="5">
            <replace-type modified-type="PyString"/>
          </modify-argument>
          <modify-argument index="6">
            <replace-type modified-type="PyObject"/>
          </modify-argument>
          <inject-code class="target" position="beginning">
            void *argp2 = 0;
            int res2 = SWIG_ConvertPtr(%PYARG_2, &amp;argp2, SWIGTYPE_p_FabricCore__Client, 0 | 0);
            if (!SWIG_IsOK(res2) || !argp2) {
              PyErr_SetString(PyExc_TypeError, "FabricCore::Client argument is of wrong type");
            }
            FabricCore::Client &amp;arg2 = *reinterpret_cast&lt; FabricCore::Client * &gt;(argp2);

            void *argp3 = 0;
            int res3 = SWIG_ConvertPtr(%PYARG_3, &amp;argp3, SWIGTYPE_p_FabricCore__DFGHost, 0 | 0);
            if (!SWIG_IsOK(res3) || !argp3) {
              PyErr_SetString(PyExc_TypeError, "FabricCore::DFGHost argument is of wrong type");
            }
            FabricCore::DFGHost &amp;arg3 = *reinterpret_cast&lt; FabricCore::DFGHost * &gt;(argp3);

            void *argp4 = 0;
            int res4 = SWIG_ConvertPtr(%PYARG_4, &amp;argp4, SWIGTYPE_p_FabricCore__DFGBinding, 0 | 0);
            if (!SWIG_IsOK(res4) || !argp4) {
              PyErr_SetString(PyExc_TypeError, "FabricCore::DFGBinding argument is of wrong type");
            }
            FabricCore::DFGBinding &amp;arg4 = *reinterpret_cast&lt; FabricCore::DFGBinding * &gt;(argp4);

            FTL::CStrRef arg5(PyString_AsString(%PYARG_5));

            void *argp6 = 0;
            int res6 = SWIG_ConvertPtr(%PYARG_6, &amp;argp6, SWIGTYPE_p_FabricCore__DFGExec, 0 | 0);
            if (!SWIG_IsOK(res6) || !argp6) {
              PyErr_SetString(PyExc_TypeError, "FabricCore::DFGExec argument is of wrong type");
            }
            FabricCore::DFGExec &amp;arg6 = *reinterpret_cast&lt; FabricCore::DFGExec * &gt;(argp6);

            if (!PyErr_Occurred())
              %0 = new %TYPE(%1, arg2, arg3, arg4, arg5, arg6, %7, %8, %9, %10);
            </inject-code>
        </modify-function>
      </object-type>
      <object-type name="PresetTreeWidget" />-
    </namespace-type>
  </namespace-type>
</typesystem>
